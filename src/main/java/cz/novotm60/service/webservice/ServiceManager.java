package cz.novotm60.service.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-12-06T15:07:33.040+01:00
 * Generated source version: 3.1.8
 */
@WebServiceClient(name = "ServiceManager",
        wsdlLocation = "file:ServiceManager.wsdl",
        targetNamespace = "http://www.cvut.cz/FEL/")
public class ServiceManager extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.cvut.cz/FEL/", "ServiceManager");
    public final static QName CustomerDatabaseSOAP = new QName("http://www.cvut.cz/FEL/", "CustomerDatabaseSOAP");

    static {
        URL url = null;
        try {
            url = new URL("file:ServiceManager.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ServiceManager.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "file:ServiceManager.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ServiceManager(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ServiceManager(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceManager() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ServiceManager(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ServiceManager(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ServiceManager(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     * @return returns ServiceManagerI
     */
    @WebEndpoint(name = "CustomerDatabaseSOAP")
    public ServiceManagerI getSOAP() {
        return super.getPort(CustomerDatabaseSOAP, ServiceManagerI.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ServiceManagerI
     */
    @WebEndpoint(name = "CustomerDatabaseSOAP")
    public ServiceManagerI getCustomerDatabaseSOAP(WebServiceFeature... features) {
        return super.getPort(CustomerDatabaseSOAP, ServiceManagerI.class, features);
    }

}
